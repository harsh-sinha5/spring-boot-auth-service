swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: user-controller
    description: User Controller
paths:
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /user/_create:
    post:
      tags:
        - user-controller
      summary: createAdmins
      operationId: createAdminsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: role
          in: query
          description: role for the user
          required: false
          type: string
          default: HOSPITAL_ADMIN
          enum:
            - HOSPITAL_ADMIN
            - VACCINATION_ADMIN
        - in: body
          name: userData
          description: Patient information to book the bed.
          required: true
          schema:
            $ref: '#/definitions/UserData'
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
      responses:
        '200':
          description: Returns true or false based on the successfull and unsuccessfull posting
          schema:
            type: boolean
        '201':
          description: Created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Validation Exception
  /user/_login:
    put:
      tags:
        - user-controller
      summary: Logins the user
      description: A valid user with valid user id and password.
      operationId: loginUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Token string
          schema:
            type: string
        '201':
          description: Created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: School Not Found
        '405':
          description: Validation Exception
  /user/_logout:
    put:
      tags:
        - user-controller
      summary: logout
      description: Logout user
      operationId: logoutUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: X-Token-ID
          in: header
          description: A JWT token which will be returned as part of login and will have user role details.
          required: true
          type: string
      responses:
        '200':
          description: Returns true or false based on the successful and unsuccessful posting
          schema:
            type: boolean
        '201':
          description: Created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Validation Exception
  /user/_signup:
    post:
      tags:
        - user-controller
      summary: Api for Citizen sign-up
      description: This API will Sign up general citizens so that they can book the bed booking for their ward and can able to schedule vaccination. Default role which will be consider for citizen is CITIZEN
      operationId: signUpUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: citizenData
          description: Citizen Data for Signup
          required: true
          schema:
            $ref: '#/definitions/CitizenData'
      responses:
        '200':
          description: Returns true or false based on the successful and unsuccessful posting
          schema:
            type: boolean
        '201':
          description: Created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resource Not Found
        '405':
          description: Validation Exception
  /user/hospitalDetails/{hospitalName}:
    get:
      tags:
        - user-controller
      summary: getHospitalName
      description: Return the hospital info covid portal admin log in to create other admins
      operationId: getHospitalNameUsingGET
      produces:
        - '*/*'
      parameters:
        - name: hospitalName
          in: path
          description: hospitalName
          required: true
          type: string
      responses:
        '200':
          description: Returns Hospital name with branches Id and and Branches pin code.
          schema:
            $ref: '#/definitions/HospitalLocDetails'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Validation Exception
definitions:
  BranchLocDetails:
    type: object
    properties:
      branchId:
        type: string
      pinCode:
        type: string
    title: BranchLocDetails
  CitizenData:
    type: object
    properties:
      cityName:
        type: string
      confirmPwd:
        type: string
      pinCode:
        type: string
      pwd:
        type: string
      userLoginId:
        type: string
    title: CitizenData
  Error:
    type: object
    properties:
      cause:
        $ref: '#/definitions/Throwable'
      localizedMessage:
        type: string
      message:
        type: string
      stackTrace:
        type: array
        items:
          $ref: '#/definitions/StackTraceElement'
      suppressed:
        type: array
        items:
          $ref: '#/definitions/Throwable'
    title: Error
  HospitalData:
    type: object
    properties:
      branchId:
        type: string
      hospitalId:
        type: string
      location:
        $ref: '#/definitions/Location'
    title: HospitalData
  HospitalLocDetails:
    type: object
    properties:
      branchLocDetails:
        type: array
        items:
          $ref: '#/definitions/BranchLocDetails'
      hospitalName:
        type: string
    title: HospitalLocDetails
  Location:
    type: object
    properties:
      cityName:
        type: string
      pinCode:
        type: string
    title: Location
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  StackTraceElement:
    type: object
    properties:
      classLoaderName:
        type: string
      className:
        type: string
      fileName:
        type: string
      lineNumber:
        type: integer
        format: int32
      methodName:
        type: string
      moduleName:
        type: string
      moduleVersion:
        type: string
      nativeMethod:
        type: boolean
    title: StackTraceElement
  Throwable:
    type: object
    properties:
      cause:
        $ref: '#/definitions/Throwable'
      localizedMessage:
        type: string
      message:
        type: string
      stackTrace:
        type: array
        items:
          $ref: '#/definitions/StackTraceElement'
      suppressed:
        type: array
        items:
          $ref: '#/definitions/Throwable'
    title: Throwable
  User:
    type: object
    properties:
      pwd:
        type: string
      userLoginId:
        type: string
    title: User
  UserData:
    type: object
    properties:
      confirmPwd:
        type: string
      hospitalData:
        $ref: '#/definitions/HospitalData'
      pwd:
        type: string
      userLoginId:
        type: string
    title: UserData
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
